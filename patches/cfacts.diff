diff --git a/config.h b/config.h
index fd97df1..f8904b5 100644
--- a/config.h
+++ b/config.h
@@ -116,6 +116,9 @@ static Key keys[] = {
 	{ MODKEY,                       XK_m,		setlayout,      {.v = &layouts[2]}							},
 	{ MODKEY,                       XK_c,		setlayout,      {.v = &layouts[3]}							},
 	{ MODKEY,                       XK_g,		setlayout,      {.v = &layouts[5]}							},
+	{ MODKEY|ShiftMask,             XK_h,		setcfact,       {.f = +0.25} },
+	{ MODKEY|ShiftMask,             XK_l,		setcfact,       {.f = -0.25} },
+	{ MODKEY|ShiftMask,             XK_o,		setcfact,       {.f =  0.00} },
 	{ MODKEY|ControlMask,           XK_space,	setlayout,      {0}											},
 	{ MODKEY|ShiftMask,             XK_space,	togglefloating, {0}											},
 	{ MODKEY,                       XK_0,		view,           {.ui = ~0 }									},
diff --git a/dwm.c b/dwm.c
index 88a3570..5764bfe 100644
--- a/dwm.c
+++ b/dwm.c
@@ -105,6 +105,7 @@ typedef struct Client Client;
 struct Client {
 	char name[256];
 	float mina, maxa;
+	float cfact;
 	int x, y, w, h;
 	int oldx, oldy, oldw, oldh;
 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
@@ -231,6 +232,7 @@ static void setfocus(Client *c);
 static void setfullscreen(Client *c, int fullscreen);
 static void setgaps(const Arg *arg);
 static void setlayout(const Arg *arg);
+static void setcfact(const Arg *arg);
 static void setmfact(const Arg *arg);
 static void setup(void);
 static void seturgent(Client *c, int urg);
@@ -1183,6 +1185,7 @@ manage(Window w, XWindowAttributes *wa)
 	c->w = c->oldw = wa->width;
 	c->h = c->oldh = wa->height;
 	c->oldbw = wa->border_width;
+	c->cfact = 1.0;
 
 	updatetitle(c);
 	if (XGetTransientForHint(dpy, w, &trans) && (t = wintoclient(trans))) {
@@ -1729,6 +1732,23 @@ setlayout(const Arg *arg)
 		drawbar(selmon);
 }
 
+void setcfact(const Arg *arg) {
+	float f;
+	Client *c;
+
+	c = selmon->sel;
+
+	if(!arg || !c || !selmon->lt[selmon->sellt]->arrange)
+		return;
+	f = arg->f + c->cfact;
+	if(arg->f == 0.0)
+		f = 1.0;
+	else if(f < 0.25 || f > 4.0)
+		return;
+	c->cfact = f;
+	arrange(selmon);
+}
+
 /* arg > 1.0 will set mfact absolutely */
 void
 setmfact(const Arg *arg)
@@ -1917,9 +1937,15 @@ void
 tile(Monitor *m)
 {
 	unsigned int i, n, h, mw, my, ty;
+	float mfacts = 0, sfacts = 0;
 	Client *c;
 
-	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++);
+	for (n = 0, c = nexttiled(m->clients); c; c = nexttiled(c->next), n++) {
+		if (n < m->nmaster)
+			mfacts += c->cfact;
+		else
+			sfacts += c->cfact;
+	}
 	if (n == 0)
 		return;
 
@@ -1929,15 +1955,17 @@ tile(Monitor *m)
 		mw = m->ww - m->gappx;
 	for (i = 0, my = ty = m->gappx, c = nexttiled(m->clients); c; c = nexttiled(c->next), i++)
 		if (i < m->nmaster) {
-			h = (m->wh - my) / (MIN(n, m->nmaster) - i) - m->gappx;
+			h = (m->wh - my) * (c->cfact / mfacts) -m->gappx;
 			resize(c, m->wx + m->gappx, m->wy + my, mw - (2*c->bw) - m->gappx, h - (2*c->bw), 0);
+			mfacts -= c->cfact;
 			if (my + HEIGHT(c) + m->gappx < m->wh)
 				my += HEIGHT(c) + m->gappx;
 		} else {
-			h = (m->wh - ty) / (n - i) - m->gappx;
+			h = (m->wh - ty) * (c->cfact / sfacts) -m->gappx;
 			resize(c, m->wx + mw + m->gappx, m->wy + ty, m->ww - mw - (2*c->bw) - 2*m->gappx, h - (2*c->bw), 0);
 			if (ty + HEIGHT(c) + m->gappx < m->wh)
 				ty += HEIGHT(c) + m->gappx;
+			sfacts -= c->cfact;
 		}
 }
 
diff --git a/dwm.o b/dwm.o
index ba8f541..753a052 100644
Binary files a/dwm.o and b/dwm.o differ
